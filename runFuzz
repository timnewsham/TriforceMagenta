#!/bin/sh
#
# usage: ./runFuzz [-C] [-M n | -S n] xtraargs..
#                   -C continue existing fuzz run
#                   -M n and -S n for master/slave.  n must be unique
#                   xtraargs are passed to qemu
#
# If AARCH64 is set, run the AARCH64 kernel.
#

AFL=${TAFL:-../TriforceAFL}
if [ ! -z "$AARCH64" ] ; then
    B=magenta/build-magenta-qemu-arm64
    Q="$AFL/qemu-system-aarch64 -machine virt -cpu cortex-a57"
else
    B=magenta/build-magenta-pc-x86-64
    Q="$AFL/qemu-system-x86_64 -machine q35 -cpu Haswell,+smap"
fi

# hokey arg parsing, sorry!
if [ "x$1" = "x-C" ] ; then # continue
    INP="-"
    shift
else
    INP=inputs
fi

if [ "x$1" = "x-M" -o "x$1" = "x-S" ] ; then # master/slave args
    FARGS="$1 $2"
    shift; shift
else
    echo "specify -M n  or -S n  please"
    exit 1
fi

getSym() {
    name=$1
    nm $B/magenta.elf |grep "T $name"|cut -d' ' -f1
}

# platform_panic_start happens right away, but no messages printed
CRASH=`getSym platform_panic_start`

# run fuzzer and qemu-system
export AFL_SKIP_CRASHES=1
$AFL/afl-fuzz $FARGS -t 500+ -i $INP -o outputs -QQ -- $Q \
    -m 1024 -nographic -net none \
    -kernel $B/magenta.elf -initrd $B/bootdata.bin \
    -append "TERM=xterm-256color kernel.entropy=562afa809d13833970ecb91af535b7f35d0adaadb6d0afc681a2366ab2d376b4 kernel.halt_on_panic=true aslr.disable=true magenta.autorun.boot=/boot/bin/fuzz" \
    -aflPanicAddr "$CRASH" \
    -aflFile @@

